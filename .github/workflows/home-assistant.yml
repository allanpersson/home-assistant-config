---
name: Home Assistant CI

# yamllint disable-line rule:truthy
on:
  push:
    branches:
      - master
      - "home-assistant/home-assistant/releases/tag/*" # INVALID LINE need help please
  pull_request:
  schedule:
    - cron: 0 10 * * *

jobs:
  yamllint:
    name: "Yamllint"
    runs-on: ubuntu-latest
    steps:
      - name: Getting your configuration from GitHub
        uses: actions/checkout@v1
      - name: Running YAMLlint
        uses: "docker://pipelinecomponents/yamllint:latest"
        with:
          args: yamllint .
  remarklint:
    name: "Remarklint"
    runs-on: ubuntu-latest
    steps:
      - name: Getting your configuration from GitHub
        uses: actions/checkout@v1
      - name: Running Remark lint
        uses: "docker://pipelinecomponents/remark-lint:latest"
        continue-on-error: true
        with:
          args: >
            "remark --no-stdout --color --frail
            --use preset-lint-recommended ."
  jsonlint: # INVALID SECTION need help please
    name: "Jsonlint"
    runs-on: ubuntu-latest
    steps:
      - name: Getting your configuration from GitHub
        uses: actions/checkout@v1
      - name: Running Json lint
        uses: "docker://pipelinecomponents/jsonlint:latest"
        continue-on-error: true
        with:
          args: >
            "find . -not -path './.git/*' -name '*.json' -type f -print0 |
            parallel --will-cite -k -0 -n1 jsonlint -q"
  shellcheck: # INVALID SECTION need help please
    name: "Shellcheck"
    runs-on: ubuntu-latest
    steps:
      - name: Getting your configuration from GitHub
        uses: actions/checkout@v1
      - name: Running Shellcheck
        uses: "docker://pipelinecomponents/shellcheck:latest"
        continue-on-error: true
        with:
          args: >
            - |
            find . -name .git -type d -prune -o -type f  -name \*.sh -print0 |
            xargs -0 -P $(nproc) -r -n1 shellcheck
            # magic, any file with a valid shebang should be scanned aswell
            - |
            find . -name .git -type d -prune -o -type f  -regex '.*/[^.]*$'   -print0 |
            xargs -0 -P $(nproc) -r -n1 sh -c 'FILE="$0"; if head -n1 "$FILE" |grep -q "^#\\! \?/.\+\(ba|d|k\)\?sh" ; then shellcheck "$FILE" ; else /bin/true ; fi '
  home_assistant_stable:
    name: "Home-Assistant: Stable"
    runs-on: ubuntu-latest
    needs: [yamllint, remarklint, jsonlint, shellcheck]
    steps:
      - name: Getting your configuration from GitHub
        uses: actions/checkout@v1
      - name: Copy stub files into configuration folder
        run: cp -R ./.stubs/* ./config
      - name: Home Assistant Version
        uses: "docker://homeassistant/home-assistant:stable"
        with:
          args: >
            python -m homeassistant --version
      - name: Home Assistant Check
        uses: "docker://homeassistant/home-assistant:stable"
        with:
          args: python -m homeassistant --config ./config/ --script check_config --info all
  home_assistant_beta:
    name: "Home-Assistant: Beta"
    runs-on: ubuntu-latest
    needs: [yamllint, remarklint, jsonlint, shellcheck]
    steps:
      - name: Getting your configuration from GitHub
        uses: actions/checkout@v1
      - name: Copy stub files into configuration folder
        run: cp -R ./.stubs/* ./config
      - name: Home Assistant Version
        uses: "docker://homeassistant/home-assistant:beta"
        with:
          args: >
            python -m homeassistant --version
      - name: Home Assistant Check
        uses: "docker://homeassistant/home-assistant:beta"
        with:
          args: python -m homeassistant --config ./config/ --script check_config --info all
  home_assistant_dev:
    name: "Home-Assistant: Developer"
    runs-on: ubuntu-latest
    needs: [yamllint, remarklint, jsonlint, shellcheck]
    steps:
      - name: Getting your configuration from GitHub
        uses: actions/checkout@v1
      - name: Copy stub files into configuration folder
        run: cp -R ./.stubs/* ./config
      - name: Home Assistant Version
        uses: "docker://homeassistant/home-assistant:dev"
        with:
          args: >
            python -m homeassistant --version
      - name: Home Assistant Check
        uses: "docker://homeassistant/home-assistant:dev"
        with:
          args: python -m homeassistant --config ./config/ --script check_config --info all
  esphome-latest:
    name: "ESPHome: Stable"
    runs-on: ubuntu-latest
    needs: [yamllint, remarklint, jsonlint, shellcheck]
    steps:
      - name: Getting your configuration from GitHub
        uses: actions/checkout@v1
      - name: Copy stub files into configuration folder
        run: cp -R ./.stubs/* ./config/esphome/
      # - name: ESPHome Version # INVALID SECTION need help please
      #   uses: "docker://esphome/esphome:latest"
      #   with:
      #     args: >
      #       python -m esphome --version
      #   continue-on-error: true
      - name: Run a custom command
        uses: esphome/esphome:latest
        with:
          entrypoint: [""]
        continue-on-error: true
      # - name: ESPHome Check # INVALID SECTION need help please
      #   uses: "docker://esphome/esphome:latest"
      #   with:
      #     args: python -m esphome --config ./config/esphome/ --script check_config --info all
      #   continue-on-error: true
  esphome-beta:
    name: "ESPHome: Beta"
    runs-on: ubuntu-latest
    needs: [yamllint, remarklint, jsonlint, shellcheck]
    steps:
      - name: Getting your configuration from GitHub
        uses: actions/checkout@v1
      - name: Copy stub files into configuration folder
        run: cp -R ./.stubs/* ./config/esphome/
      - name: ESPHome Version # INVALID SECTION need help please
        uses: "docker://esphome/esphome:beta"
        with:
          args: >
            esphome -version
        continue-on-error: true
      - name: ESPHome Check # INVALID SECTION need help please
        uses: "docker://esphome/esphome:beta"
        with:
          args: python -m esphome --config ./config/esphome/ --script check_config --info all
        continue-on-error: true
  esphome-dev:
    name: "ESPHome: Developer"
    runs-on: ubuntu-latest
    needs: [yamllint, remarklint, jsonlint, shellcheck]
    steps:
      - name: Getting your configuration from GitHub
        uses: actions/checkout@v1
      - name: Copy stub files into configuration folder
        run: cp -R ./.stubs/* ./config/esphome/
      - name: ESPHome Version # INVALID SECTION need help please
        uses: "docker://esphome/esphome:dev"
        with:
          args: >
            esphome -v
        continue-on-error: true
      - name: ESPHome Check # INVALID SECTION need help please
        uses: "docker://esphome/esphome:dev"
        with:
          args: python -m esphome --config ./config/esphome/ --script check_config --info all
        continue-on-error: true
